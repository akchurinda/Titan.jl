var documenterSearchIndex = {"docs":
[{"location":"Tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"Tutorial/#Defining-Models","page":"Tutorial","title":"Defining Models","text":"","category":"section"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To quickly get you started with Titan.jl, let us recreate a simple example of a cantilever beam subjected to a distributed load.","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"First of all, load the package using the following command:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"using Titan","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To create a new model, use the Model() constructor:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"model = Model()","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add nodes, use the node!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"node!(model,  1,  0 * 12, 0)\nnode!(model,  2,  1 * 12, 0)\nnode!(model,  3,  2 * 12, 0)\nnode!(model,  4,  3 * 12, 0)\nnode!(model,  5,  4 * 12, 0)\nnode!(model,  6,  5 * 12, 0)\nnode!(model,  7,  6 * 12, 0)\nnode!(model,  8,  7 * 12, 0)\nnode!(model,  9,  8 * 12, 0)\nnode!(model, 10,  9 * 12, 0)\nnode!(model, 11, 10 * 12, 0)","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add supports to the model, use support!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"support!(model, 1, true, true, true)","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add sections to the model, use the section!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"section!(model, 1, 9.16, 180)","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add materials to the model, use the material!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"material!(model, 1, 29000)","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add elements to the model, use the element!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"element!(model,  1,  1,  2, 1, 1)\nelement!(model,  2,  2,  3, 1, 1)\nelement!(model,  3,  3,  4, 1, 1)\nelement!(model,  4,  4,  5, 1, 1)\nelement!(model,  5,  5,  6, 1, 1)\nelement!(model,  6,  6,  7, 1, 1)\nelement!(model,  7,  7,  8, 1, 1)\nelement!(model,  8,  8,  9, 1, 1)\nelement!(model,  9,  9, 10, 1, 1)\nelement!(model, 10, 10, 11, 1, 1)","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To add distributed loads to the model, use the dload!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"dload!(model,  1, 0, -1)\ndload!(model,  2, 0, -1)\ndload!(model,  3, 0, -1)\ndload!(model,  4, 0, -1)\ndload!(model,  5, 0, -1)\ndload!(model,  6, 0, -1)\ndload!(model,  7, 0, -1)\ndload!(model,  8, 0, -1)\ndload!(model,  9, 0, -1)\ndload!(model, 10, 0, -1)","category":"page"},{"location":"Tutorial/#Performing-Analysis","page":"Tutorial","title":"Performing Analysis","text":"","category":"section"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To perform linear elastic analysis, use the analyze!() function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"analyze!(model, LinearElasticAnalysis())","category":"page"},{"location":"Tutorial/#Plotting-Undeformed-and-Deformed-Models","page":"Tutorial","title":"Plotting Undeformed and Deformed Models","text":"","category":"section"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To plot the undeformed and deformed models, load the CairoMakie function:","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"using CairoMakie\n\nCairoMakie.activate!(type = :svg) # hide\nCairoMakie.set_theme!(theme_latexfonts()) # hide","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"To plot the deformed and undeformed models use plotundeformed() and plotdeformed() functions, respectively.","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"begin\n    F = Figure()\n\n    A = Axis(F[1, 1])\n\n    # Plot the undeformed model:\n    plotundeformed!(A, model, label = \"Undeformed\")\n\n    # Plot the deformed model:\n    plotdeformed!(A, model, label = \"Deformed\")\n\n    axislegend(A, position = :lb)\n\n    F\nend","category":"page"},{"location":"#Description","page":"Home","title":"Description","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Titan.jl is a package for structural analysis with automatic differentiation capabilities written purely in the Julia programming language.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Titan.jl, type ] in Julia REPL to enter the built-in Julia package manager and execute the following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Titan","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Titan.jl is distributed under the MIT license. More information can be found in the LICENSE.md file.","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The developement of Titan.jl was inspired by OpenSeesPy, MASTAN2, and PyNite.","category":"page"}]
}
